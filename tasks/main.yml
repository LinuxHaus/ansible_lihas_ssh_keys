---
- name: Check and set lihas_become
  block:
    - name: Lihas_become init
      ansible.builtin.set_fact:
        lihas_become: false
      tags:
        - always
    - name: Check if become is necessary
      ansible.builtin.set_fact:
        lihas_become: true
      when: ansible_effective_user_id != 0
      tags:
        - always
  when: lihas_become is not defined

- name: Include variables
  ansible.builtin.include_role:
    name: lihas_variables
  when: configspaces is not defined

- name: Init ssh keys active
  ansible.builtin.set_fact:
    ssh_keys_active: "{{ ssh_keys_active | default([]) + hostvars[inventory_hostname][item]['config']['ssh']['keys_active']['keys'] | default([]) }}"
  loop: "{{ configspaces }}"
- name: Init ssh keys inactive
  ansible.builtin.set_fact:
    ssh_keys_inactive: "{{ ssh_keys_inactive | default([]) + hostvars[inventory_hostname][item]['config']['ssh']['keys_inactive']['keys'] | default([]) }}"
  loop: "{{ configspaces }}"
- name: Show ssh_keys_active
  ansible.builtin.debug:
    var: ssh_keys_active
    verbosity: 1
- name: Show ssh_keys_inactive
  ansible.builtin.debug:
    var: ssh_keys_active
    verbosity: 1
- name: Add keys to authorized_keys
  ansible.posix.authorized_key:
    key: "{{ item }}"
    user: root
    state: present
  loop: "{{ ssh_keys_active }}"
  become: "{{ lihas_become }}"
- name: Remove obsolete keys from authorized_keys
  ansible.posix.authorized_key:
    key: "{{ item }}"
    user: root
    state: absent
  loop: "{{ ssh_keys_inactive }}"
  become: "{{ lihas_become }}"
...
